name: Release

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release-version:
    runs-on: ubuntu-latest
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'gradle'
      - uses: gradle/wrapper-validation-action@v1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Get current version
        id: get_version
        run: |
          source gradle.properties
          echo "current_version=${version}" >> $GITHUB_ENV

      - name: Determine version type
        id: bump_version
        run: |
          export major=$(echo "${VERSION}" | cut -d. -f1)
          export minor=$(echo "${VERSION}" | cut -d. -f2)
          export patch=$(echo "${VERSION}" | cut -d. -f3 | cut -d- -f1)
          echo "resolved: ${major}.${minor}.${patch}"
          
          if [[ "$TYPE" == "major" ]]; then
            echo "new_version=$((major+1)).0.0" >> $GITHUB_ENV
            echo "new_snapshot_version=$((major+1)).0.1-SNAPSHOT" >> $GITHUB_ENV
          elif [ "$TYPE" == "minor" ]; then
            echo "new_version=${major}.$((minor+1)).0" >> $GITHUB_ENV
            echo "new_snapshot_version=${major}.$((minor+1)).1-SNAPSHOT" >> $GITHUB_ENV
          else
            echo "new_version=${major}.${minor}.${patch}" >> $GITHUB_ENV
            echo "new_snapshot_version=${major}.${minor}.$((patch+1))-SNAPSHOT" >> $GITHUB_ENV
          fi
        env:
          TYPE: ${{ inputs.type }}
          VERSION: ${{ env.current_version }}
      - name: Set gradle global config 'user.name' and 'user.email'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "ci@thriving.dev"
      - name: Run 'gradle release'
        id: gradle_release
        run: |
          echo "Type: ${{ inputs.type }}"
          echo "Current version: ${{ env.current_version }}"
          echo "New version: ${{ env.new_version }}"
          echo "New snapshot version: ${{ env.new_snapshot_version }}"
          echo "./gradlew release -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=${{ env.new_version }} -Prelease.newVersion=${{ env.new_snapshot_version }}"
          gradle release -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=${{ env.new_version }} -Prelease.newVersion=${{ env.new_snapshot_version }}
